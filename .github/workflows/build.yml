# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build

on: [push]

env:
  IMAGE_NAME: studprokat-backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build a container image from Spring Boot app using Paketo.io / Cloud Native Build Packs
      uses: burrunan/gradle-cache-action@v1
      with:
        job-id: jdk17
        arguments: bootBuildImage --imageName=$IMAGE_NAME
        gradle-version: wrapper

    - name: Tag & publish to GitHub Container Registry
      run: |
        IMAGE_ID=ghcr.io/takeoutspace18/$IMAGE_NAME
        VERSION=latest
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

  update-yc:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2
        env:
          YC_VM_SSH_PUBLIC_KEY: ${{ secrets.YC_VM_SSH_PUBLIC_KEY }}
          YC_VM_USERNAME: ${{ vars.YC_VM_USERNAME }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ vars.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-platform-id: 'standard-v3'
          vm-memory: 1Gb
          vm-disk-size: 30Gb
          vm-core-fraction: 20
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          docker-compose-path: './docker-compose.yaml'
          user-data-path: './yandex-cloud/user-data.yaml'
